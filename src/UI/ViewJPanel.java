/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.APPROVE_OPTION;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.EmployeeProfile;
import model.EmployeeProfileHistory;

/**
 *
 * @author lenovo pc
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
   
    EmployeeProfileHistory history;
    public ViewJPanel(EmployeeProfileHistory history) {
        initComponents();
        this.history = history;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        lbl_Search = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPositionTitle = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTeamInfo = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtEmployeeID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblProfilePhoto = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("View Employee History");

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Mobile No", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);
        if (tblEmployee.getColumnModel().getColumnCount() > 0) {
            tblEmployee.getColumnModel().getColumn(0).setResizable(false);
            tblEmployee.getColumnModel().getColumn(1).setResizable(false);
            tblEmployee.getColumnModel().getColumn(2).setResizable(false);
            tblEmployee.getColumnModel().getColumn(3).setResizable(false);
            tblEmployee.getColumnModel().getColumn(4).setResizable(false);
            tblEmployee.getColumnModel().getColumn(5).setResizable(false);
            tblEmployee.getColumnModel().getColumn(6).setResizable(false);
            tblEmployee.getColumnModel().getColumn(7).setResizable(false);
            tblEmployee.getColumnModel().getColumn(8).setResizable(false);
            tblEmployee.getColumnModel().getColumn(9).setResizable(false);
        }

        lbl_Search.setText("Search");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel11.setText("Email");

        jLabel10.setText("Position Title");

        jLabel9.setText("Level");

        jLabel8.setText("Age");

        jLabel7.setText("Employee ID");

        jLabel6.setText("Mobile Number");

        jLabel5.setText("Team Info");

        jLabel4.setText("Start Date");

        jLabel3.setText("Gender");

        jLabel2.setText("Name");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Employee Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(359, 359, 359)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addGap(86, 86, 86)
                                        .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lbl_Search)
                                        .addGap(47, 47, 47)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(103, 103, 103)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(btnView)
                                        .addGap(51, 51, 51)
                                        .addComponent(btnDelete)
                                        .addGap(42, 42, 42)
                                        .addComponent(btnUpdate))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addGap(78, 78, 78)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLevel)
                                            .addComponent(txtPositionTitle)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                                        .addComponent(lblProfilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtGender, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                    .addComponent(txtName))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Search)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(28, 28, 28)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblProfilePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(141, 141, 141))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0){
        JOptionPane.showMessageDialog(this, "Please select a row to view the details.");
        return;
    }
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeProfile selectedEmployee = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
        txtName.setText(String.valueOf(selectedEmployee.getName()));
        txtEmployeeID.setText(String.valueOf(selectedEmployee.getEmployeeID()));
        txtAge.setText(String.valueOf(selectedEmployee.getAge()));
        txtGender.setText(selectedEmployee.getGender());
        txtStartDate.setText(String.valueOf(selectedEmployee.getStartDate()));
        txtLevel.setText(String.valueOf(selectedEmployee.getLevel()));
        txtTeamInfo.setText(String.valueOf(selectedEmployee.getTeamInfo()));
        txtPositionTitle.setText(String.valueOf(selectedEmployee.getPositionTitle()));
        txtMobile.setText(String.valueOf(selectedEmployee.getCellPhone()));
        txtEmail.setText(String.valueOf(selectedEmployee.getEmail()));
        //Profile photo display
        
         //Capturing image as buffered image for resize
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(selectedEmployee.getProfilePhoto()));
        } catch (IOException ex) {
            Logger.getLogger(ViewJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Shrinking image to label size
        Image resizeimg = img.getScaledInstance(150, 150,Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(resizeimg);
        lblProfilePhoto.setIcon(imageIcon);  
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        //if no row is selected
        if (selectedRowIndex<0){
        JOptionPane.showMessageDialog(this, "Please select a row to delele.");
        return;
    }
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeProfile selectedEmployee = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
        history.deleteProfile(selectedEmployee);
        
        
        JOptionPane.showMessageDialog(this, "Employee history delected.");
        
        populateTable(); //using this method to refresh table after deleting
        
        //Refreshing the fields
            txtSearch.setText("");
            txtName.setText("");
            txtEmployeeID.setText("");
            txtAge.setText("");
            txtGender.setText("");
            txtStartDate.setText("");
            txtLevel.setText("");
            txtTeamInfo.setText("");
            txtPositionTitle.setText("");
            txtMobile.setText("");
            txtEmail.setText("");
            lblProfilePhoto.setIcon(null);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        //get table model
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        EmployeeProfile selectedEmployee = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
        if(tblEmployee.getSelectedRowCount()==1){
            
          //if single row is selected then update
          
            String name = txtName.getText();
            String employeeID = txtEmployeeID.getText();
            int age = Integer.parseInt(txtAge.getText());
            String gender = txtGender.getText();
            String startDate = txtStartDate.getText();
            String level = txtLevel.getText();
            String teamInfo = txtTeamInfo.getText();
            String positionTitle = txtPositionTitle.getText();
            String email = txtEmail.getText();
            String cellPhone = txtMobile.getText();
            //String profilePhoto = txtBrowseImage.getText();
        
        //set updated values
        
        
        model.setValueAt(name, tblEmployee.getSelectedRow(), 0);
        model.setValueAt(employeeID, tblEmployee.getSelectedRow(), 1);
        model.setValueAt(age, tblEmployee.getSelectedRow(), 2);
        model.setValueAt(gender, tblEmployee.getSelectedRow(), 3);
        model.setValueAt(startDate, tblEmployee.getSelectedRow(), 4);
        model.setValueAt(level, tblEmployee.getSelectedRow(), 5);
        model.setValueAt(teamInfo, tblEmployee.getSelectedRow(), 6);
        model.setValueAt(positionTitle, tblEmployee.getSelectedRow(), 7);
        model.setValueAt(cellPhone, tblEmployee.getSelectedRow(), 8);
        model.setValueAt(email, tblEmployee.getSelectedRow(), 9);
        //model.setValueAt(profilePhoto, tblEmployee.getSelectedRow(), 10);
        
        selectedEmployee.setName(txtName.getText());
        selectedEmployee.setEmployeeID(txtEmployeeID.getText());
        selectedEmployee.setAge(age);
        selectedEmployee.setGender(txtGender.getText());
        selectedEmployee.setStartDate(txtStartDate.getText());
        selectedEmployee.setLevel(txtLevel.getText());
        selectedEmployee.setTeamInfo(txtTeamInfo.getText());
        selectedEmployee.setPositionTitle(txtPositionTitle.getText());
        selectedEmployee.setCellPhone(cellPhone);
        selectedEmployee.setEmail(txtEmail.getText());
        //selectedEmployee.setProfilePhoto(txtBrowseImage.getText());
        
       
        //update message display
        JOptionPane.showMessageDialog(this, "Updated successfully.");
        
        
        }
        else{
            if(tblEmployee.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Table is empty");
                
            }else{
                JOptionPane.showMessageDialog(this, "Please select for update");
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        
            txtName.setText("");
            txtEmployeeID.setText("");
            txtAge.setText("");
            txtGender.setText("");
            txtStartDate.setText("");
            txtLevel.setText("");
            txtTeamInfo.setText("");
            txtPositionTitle.setText("");
            txtMobile.setText("");
            txtEmail.setText("");
            lblProfilePhoto.setText("");
            lblProfilePhoto.setIcon(null);
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblEmployee.setRowSorter(tr);
        tr.setRowFilter(RowFilter. regexFilter(txtSearch.getText().trim()));
        
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblEmployee.setRowSorter(tr);
        tr.setRowFilter(RowFilter. regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        /*int selectedRowIndex = tblEmployee.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeProfile selectedEmployee = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        //set data to the tex field when row is selected
        
        String tblName = model.getValueAt(tblEmployee.getSelectedRow(), 0).toString();
        String tblEmployeeID = model.getValueAt(tblEmployee.getSelectedRow(), 1).toString();
        String tblAge = model.getValueAt(tblEmployee.getSelectedRow(), 2).toString();
        String tblGender = model.getValueAt(tblEmployee.getSelectedRow(), 3).toString();
        String tblStartDate = model.getValueAt(tblEmployee.getSelectedRow(), 4).toString();
        String tblLevel = model.getValueAt(tblEmployee.getSelectedRow(), 5).toString();
        String tblTeamInfo = model.getValueAt(tblEmployee.getSelectedRow(), 6).toString();
        String tblPositionTitle = model.getValueAt(tblEmployee.getSelectedRow(), 7).toString();
        String tblMobile = model.getValueAt(tblEmployee.getSelectedRow(), 8).toString();
        String tblEmail = model.getValueAt(tblEmployee.getSelectedRow(), 9).toString();
        String tblProfilePhoto = model.getValueAt(tblEmployee.getSelectedRow(), 10).toString();
        
        //set to textfiled
        
        txtName.setText(tblName);
        txtEmployeeID.setText(tblEmployeeID);
        txtAge.setText(tblAge);
        txtGender.setText(tblGender);
        txtStartDate.setText(tblStartDate);
        txtLevel.setText(tblLevel);
        txtTeamInfo.setText(tblTeamInfo);
        txtPositionTitle.setText(tblPositionTitle);
        txtMobile.setText(tblMobile);
        txtEmail.setText(tblEmail);
        //profilePhotoLabl.setText(tblProfilePhoto);
        
        //Profile photo display
        
         //Capturing image as buffered image for resize
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File(selectedEmployee.getProfilePhoto()));
        } catch (IOException ex) {
            Logger.getLogger(ViewJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Shrinking image to label size
        Image resizeimg = img.getScaledInstance(150, 150,Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(resizeimg);
        lblProfilePhoto.setIcon(imageIcon);*/
        
       
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProfilePhoto;
    private javax.swing.JLabel lbl_Search;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

private void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();//explain
        model.setRowCount(0);
        
        for(EmployeeProfile ps : history.getHistory()){
            Object[] row = new Object[11];
            row[0] = ps;
            row[1] = ps.getEmployeeID();
            row[2] = ps.getAge();
            row[3] = ps.getGender();
            row[4] = ps.getStartDate();
            row[5] = ps.getLevel();
            row[6] = ps.getTeamInfo();
            row[7] = ps.getPositionTitle();
            row[8] = ps.getCellPhone();
            row[9] = ps.getEmail();
            row[10] = ps.getProfilePhoto();
            
            model.addRow(row);
        }
    }
}
